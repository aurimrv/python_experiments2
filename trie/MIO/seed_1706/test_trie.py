# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import trie as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    complex_0 = -624.737 + 4277.4087j
    list_0 = [complex_0, complex_0, complex_0]
    module_0.Trie(list_0)


def test_case_1():
    set_0 = set()
    trie_0 = module_0.Trie(set_0)
    assert f"{type(trie_0).__module__}.{type(trie_0).__qualname__}" == "trie.Trie"
    assert trie_0.head == {}
    assert module_0.Trie.eof == "__eof__"


def test_case_2():
    str_0 = "+%!(R"
    trie_0 = module_0.Trie(str_0)
    assert trie_0.head == {
        "+": {"__eof__": "__eof__"},
        "%": {"__eof__": "__eof__"},
        "!": {"__eof__": "__eof__"},
        "(": {"__eof__": "__eof__"},
        "R": {"__eof__": "__eof__"},
    }
    assert module_0.Trie.eof == "__eof__"


def test_case_3():
    str_0 = "&\x0czrJqnF_\\|"
    trie_0 = module_0.Trie(str_0)
    assert trie_0.head == {
        "&": {"__eof__": "__eof__"},
        "\x0c": {"__eof__": "__eof__"},
        "z": {"__eof__": "__eof__"},
        "r": {"__eof__": "__eof__"},
        "J": {"__eof__": "__eof__"},
        "q": {"__eof__": "__eof__"},
        "n": {"__eof__": "__eof__"},
        "F": {"__eof__": "__eof__"},
        "_": {"__eof__": "__eof__"},
        "\\": {"__eof__": "__eof__"},
        "|": {"__eof__": "__eof__"},
    }
    assert module_0.Trie.eof == "__eof__"
    var_0 = trie_0.add(str_0)
    assert len(trie_0.head) == 11


def test_case_4():
    set_0 = set()
    trie_0 = module_0.Trie(set_0)
    assert f"{type(trie_0).__module__}.{type(trie_0).__qualname__}" == "trie.Trie"
    assert trie_0.head == {}
    assert module_0.Trie.eof == "__eof__"
    var_0 = trie_0.add(set_0)
    assert trie_0.head == {"__eof__": "__eof__"}


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "hvTLS2+!ixoJ%r%4"
    trie_0 = module_0.Trie(str_0)
    assert trie_0.head == {
        "h": {"__eof__": "__eof__"},
        "v": {"__eof__": "__eof__"},
        "T": {"__eof__": "__eof__"},
        "L": {"__eof__": "__eof__"},
        "S": {"__eof__": "__eof__"},
        "2": {"__eof__": "__eof__"},
        "+": {"__eof__": "__eof__"},
        "!": {"__eof__": "__eof__"},
        "i": {"__eof__": "__eof__"},
        "x": {"__eof__": "__eof__"},
        "o": {"__eof__": "__eof__"},
        "J": {"__eof__": "__eof__"},
        "%": {"__eof__": "__eof__"},
        "r": {"__eof__": "__eof__"},
        "4": {"__eof__": "__eof__"},
    }
    assert module_0.Trie.eof == "__eof__"
    var_0 = trie_0.get_all_common_prefix(str_0)
    var_0.get_all_common_prefix(var_0)


def test_case_6():
    str_0 = "&\x0czrJqnF_\\|<"
    trie_0 = module_0.Trie(str_0)
    assert trie_0.head == {
        "&": {"__eof__": "__eof__"},
        "\x0c": {"__eof__": "__eof__"},
        "z": {"__eof__": "__eof__"},
        "r": {"__eof__": "__eof__"},
        "J": {"__eof__": "__eof__"},
        "q": {"__eof__": "__eof__"},
        "n": {"__eof__": "__eof__"},
        "F": {"__eof__": "__eof__"},
        "_": {"__eof__": "__eof__"},
        "\\": {"__eof__": "__eof__"},
        "|": {"__eof__": "__eof__"},
        "<": {"__eof__": "__eof__"},
    }
    assert module_0.Trie.eof == "__eof__"
    var_0 = trie_0.add(str_0)
    assert len(trie_0.head) == 12
    var_1 = trie_0.get_all_common_prefix(str_0)


def test_case_7():
    set_0 = set()
    trie_0 = module_0.Trie(set_0)
    assert f"{type(trie_0).__module__}.{type(trie_0).__qualname__}" == "trie.Trie"
    assert trie_0.head == {}
    assert module_0.Trie.eof == "__eof__"
    var_0 = trie_0.get_all_common_prefix(set_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'J5N9fB\nE"g4^PSF5"'
    str_1 = "~SYtl\x0b"
    trie_0 = module_0.Trie(str_0)
    assert trie_0.head == {
        "J": {"__eof__": "__eof__"},
        "5": {"__eof__": "__eof__"},
        "N": {"__eof__": "__eof__"},
        "9": {"__eof__": "__eof__"},
        "f": {"__eof__": "__eof__"},
        "B": {"__eof__": "__eof__"},
        "\n": {"__eof__": "__eof__"},
        "E": {"__eof__": "__eof__"},
        '"': {"__eof__": "__eof__"},
        "g": {"__eof__": "__eof__"},
        "4": {"__eof__": "__eof__"},
        "^": {"__eof__": "__eof__"},
        "P": {"__eof__": "__eof__"},
        "S": {"__eof__": "__eof__"},
        "F": {"__eof__": "__eof__"},
    }
    assert module_0.Trie.eof == "__eof__"
    var_0 = trie_0.get_all_common_prefix(str_1)
    trie_1 = module_0.Trie(str_0)
    assert trie_1.head == {
        "J": {"__eof__": "__eof__"},
        "5": {"__eof__": "__eof__"},
        "N": {"__eof__": "__eof__"},
        "9": {"__eof__": "__eof__"},
        "f": {"__eof__": "__eof__"},
        "B": {"__eof__": "__eof__"},
        "\n": {"__eof__": "__eof__"},
        "E": {"__eof__": "__eof__"},
        '"': {"__eof__": "__eof__"},
        "g": {"__eof__": "__eof__"},
        "4": {"__eof__": "__eof__"},
        "^": {"__eof__": "__eof__"},
        "P": {"__eof__": "__eof__"},
        "S": {"__eof__": "__eof__"},
        "F": {"__eof__": "__eof__"},
    }
    trie_0.get_all_common_prefix(var_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    none_type_0 = None
    module_0.Trie(none_type_0)
