# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import first_missing_positive as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x11\xb5\x00GK;M\x14\xb6^\x99\xc1\x90\x99\xa9L"
    module_0.first_missing_positive(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\x11\xb5C\x00GK;M\x14\xb6^\x99\xc1\x90\x99\xa9L"
    module_0.first_missing_positive(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x01s\xdc\xe2\x05\xf3\x0f\xa6\xc1X4]\x1c\x06"
    module_0.first_missing_positive(bytes_0)


def test_case_3():
    bool_0 = True
    tuple_0 = (bool_0,)
    var_0 = module_0.first_missing_positive(tuple_0)
    assert var_0 == 2


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -1020
    tuple_0 = (int_0,)
    module_0.first_missing_positive(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.first_missing_positive(list_0)
    assert var_0 == 2
    set_0 = {var_0}
    module_0.first_missing_positive(set_0)


def test_case_6():
    bytes_0 = b""
    var_0 = module_0.first_missing_positive(bytes_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_7():
    object_0 = module_1.object()
    module_0.first_missing_positive(object_0)
