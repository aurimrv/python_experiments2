# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import convert_base as module_0


def test_case_0():
    str_0 = "8Te]<DfsF@ 7evqQ}"
    int_0 = 1048
    var_0 = module_0.convert_base(str_0, int_0)
    assert var_0 == -1
    var_1 = module_0.convert_digit_to_int(str_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 16
    module_0.convert_base(int_0, int_0)


def test_case_2():
    str_0 = "q`}&XE"
    bool_0 = True
    var_0 = module_0.convert_base(str_0, bool_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "1"
    var_0 = module_0.convert_digit_to_int(str_0)
    assert var_0 == 1
    var_1 = module_0.convert_base(str_0, var_0)
    assert var_1 == 1
    module_0.convert_digit_to_int(var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    module_0.convert_base(bool_0, bool_0)


def test_case_5():
    str_0 = "a$\"c'\x0c|O"
    bool_0 = False
    var_0 = module_0.convert_base(str_0, bool_0)
    assert var_0 == -1


def test_case_6():
    int_0 = -2918
    float_0 = -3731.9366
    var_0 = module_0.convert_base(int_0, float_0)
    assert var_0 == -1


def test_case_7():
    str_0 = "7=(sa4e9SOW3"
    var_0 = module_0.convert_digit_to_int(str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = -1013
    set_0 = {int_0, int_0, int_0, int_0}
    module_0.convert_digit_to_int(set_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    none_type_0 = None
    module_0.convert_digit_to_int(none_type_0)
