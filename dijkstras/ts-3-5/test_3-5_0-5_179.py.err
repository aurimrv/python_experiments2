import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras, WeightedGraph, Vertex

@pytest.fixture
def weighted_graph():
    graph = WeightedGraph()
    v1 = Vertex('A')
    v2 = Vertex('B')
    v3 = Vertex('C')
    v4 = Vertex('D')
    v1.add_neighbor(v2, 1)
    v1.add_neighbor(v3, 3)
    v2.add_neighbor(v4, 2)
    v3.add_neighbor(v4, 1)
    graph.add_vertex(v1)
    graph.add_vertex(v2)
    graph.add_vertex(v3)
    graph.add_vertex(v4)
    return graph

def test_dijkstras_shortest_path(weighted_graph):
    src = 'A'
    dst = 'D'
    path = dijkstras(weighted_graph, src, dst)
    assert path == ['A', 'B', 'D']

def test_dijkstras_shortest_path_reverse(weighted_graph):
    src = 'D'
    dst = 'A'
    path = dijkstras(weighted_graph, src, dst)
    assert path == ['D', 'C', 'A']

def test_dijkstras_same_source_and_destination(weighted_graph):
    src = 'A'
    dst = 'A'
    path = dijkstras(weighted_graph, src, dst)
    assert path == ['A']

def test_dijkstras_unreachable_destination(weighted_graph):
    src = 'A'
    dst = 'E'
    path = dijkstras(weighted_graph, src, dst)
    assert path == []