import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

class TestDijkstras:
    def test_shortest_path_case1(self):
        weighted_graph = WeightedGraph()
        vertex_a = Vertex("A")
        vertex_b = Vertex("B")
        vertex_c = Vertex("C")
        vertex_d = Vertex("D")
        
        vertex_a.add_adjacent(vertex_b, 1)
        vertex_a.add_adjacent(vertex_c, 4)
        vertex_b.add_adjacent(vertex_c, 2)
        vertex_b.add_adjacent(vertex_d, 5)
        vertex_c.add_adjacent(vertex_d, 1)
        
        weighted_graph.add_vertex(vertex_a)
        weighted_graph.add_vertex(vertex_b)
        weighted_graph.add_vertex(vertex_c)
        weighted_graph.add_vertex(vertex_d)
        
        src = "A"
        dst = "D"
        
        assert dijkstras(weighted_graph, src, dst) == ["A", "B", "C", "D"]
    
    def test_shortest_path_case2(self):
        weighted_graph = WeightedGraph()
        vertex_a = Vertex("A")
        vertex_b = Vertex("B")
        vertex_c = Vertex("C")
        
        vertex_a.add_adjacent(vertex_b, 3)
        vertex_a.add_adjacent(vertex_c, 5)
        vertex_b.add_adjacent(vertex_c, 2)
        
        weighted_graph.add_vertex(vertex_a)
        weighted_graph.add_vertex(vertex_b)
        weighted_graph.add_vertex(vertex_c)
        
        src = "A"
        dst = "C"
        
        assert dijkstras(weighted_graph, src, dst) == ["A", "B", "C"]

    def test_shortest_path_case3(self):
        weighted_graph = WeightedGraph()
        vertex_a = Vertex("A")
        vertex_b = Vertex("B")
        vertex_c = Vertex("C")
        vertex_d = Vertex("D")
        
        vertex_a.add_adjacent(vertex_b, 2)
        vertex_a.add_adjacent(vertex_c, 4)
        vertex_b.add_adjacent(vertex_c, 1)
        vertex_b.add_adjacent(vertex_d, 3)
        vertex_c.add_adjacent(vertex_d, 5)
        
        weighted_graph.add_vertex(vertex_a)
        weighted_graph.add_vertex(vertex_b)
        weighted_graph.add_vertex(vertex_c)
        weighted_graph.add_vertex(vertex_d)
        
        src = "A"
        dst = "D"
        
        assert dijkstras(weighted_graph, src, dst) == ["A", "B", "D"]