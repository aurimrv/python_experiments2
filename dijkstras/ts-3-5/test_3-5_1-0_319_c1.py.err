import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras
from weighted_graph import WeightedGraph, Vertex

import pytest

def test_dijkstras_path_exist():
    weighted_graph = WeightedGraph()
    v0 = Vertex(0)
    v1 = Vertex(1)
    v2 = Vertex(2)
    v3 = Vertex(3)
    
    v0.add_neighbor(v1, 2)
    v0.add_neighbor(v2, 4)
    v1.add_neighbor(v3, 1)
    v2.add_neighbor(v3, 3)

    weighted_graph.add_vertex(v0)
    weighted_graph.add_vertex(v1)
    weighted_graph.add_vertex(v2)
    weighted_graph.add_vertex(v3)

    assert dijkstras(weighted_graph, 0, 3) == [0, 1, 3]

def test_dijkstras_weighted_graph_with_negative_weights():
    weighted_graph = WeightedGraph()
    v0 = Vertex(0)
    v1 = Vertex(1)
    v2 = Vertex(2)

    v0.add_neighbor(v1, 2)
    v0.add_neighbor(v2, -3)
    v1.add_neighbor(v2, -1)

    weighted_graph.add_vertex(v0)
    weighted_graph.add_vertex(v1)
    weighted_graph.add_vertex(v2)

    assert dijkstras(weighted_graph, 0, 2) == [0, 2]

def test_dijkstras_no_possible_path():
    weighted_graph = WeightedGraph()
    v0 = Vertex(0)
    v1 = Vertex(1)
    v2 = Vertex(2)

    v0.add_neighbor(v1, 2)
    v1.add_neighbor(v2, 1)

    weighted_graph.add_vertex(v0)
    weighted_graph.add_vertex(v1)
    weighted_graph.add_vertex(v2)

    assert dijkstras(weighted_graph, 0, 2) == []