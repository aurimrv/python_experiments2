import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras():
    weighted_graph = {
        'A': {'B': 5, 'C': 3},
        'B': {'A': 5, 'C': 2},
        'C': {'A': 3, 'B': 2}
    }
    
    src = 'A'
    dst = 'B'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'B']

def test_dijkstras_same_node():
    weighted_graph = {
        'A': {'B': 5, 'C': 3},
        'B': {'A': 5, 'C': 2},
        'C': {'A': 3, 'B': 2}
    }
    
    src = 'A'
    dst = 'A'
    assert dijkstras(weighted_graph, src, dst) == ['A']

def test_dijkstras_long_path():
    weighted_graph = {
        'A': {'B': 5, 'C': 3},
        'B': {'A': 5, 'C': 2},
        'C': {'A': 3, 'B': 2}
    }
    
    src = 'A'
    dst = 'C'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'C']

def test_dijkstras_no_path():
    weighted_graph = {
        'A': {'B': 5, 'C': 3},
        'B': {'A': 5, 'C': 2},
        'C': {'A': 3, 'B': 2}
    }
    
    src = 'B'
    dst = 'C'
    assert dijkstras(weighted_graph, src, dst) == []

def test_dijkstras_empty_graph():
    weighted_graph = {}
    
    src = 'A'
    dst = 'B'
    assert dijkstras(weighted_graph, src, dst) == []

def test_dijkstras_single_node():
    weighted_graph = {
        'A': {}
    }
    
    src = 'A'
    dst = 'A'
    assert dijkstras(weighted_graph, src, dst) == ['A']