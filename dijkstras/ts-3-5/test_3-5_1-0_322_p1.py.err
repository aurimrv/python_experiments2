import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

class Vertex:
    def __init__(self, neighbors, weights):
        self.neighbors = neighbors
        self.weights = weights

class WeightedGraph:
    def __init__(self):
        self.vertices = {}

def test_dijkstras_single_path():
    weighted_graph = WeightedGraph()
    weighted_graph.vertices = {
        'A': Vertex(['B', 'C'], [1, 3]),
        'B': Vertex(['A', 'C'], [1, 1]),
        'C': Vertex(['A', 'B'], [3, 1])
    }
    assert dijkstras(weighted_graph, 'A', 'B') == ['A', 'B']

def test_dijkstras_shortest_path():
    weighted_graph = WeightedGraph()
    weighted_graph.vertices = {
        'A': Vertex(['B', 'C'], [1, 3]),
        'B': Vertex(['A', 'C'], [1, 1]),
        'C': Vertex(['A', 'B'], [3, 1])
    }
    assert dijkstras(weighted_graph, 'A', 'C') == ['A', 'C']

def test_dijkstras_no_path():
    weighted_graph = WeightedGraph()
    weighted_graph.vertices = {
        'A': Vertex(['B'], [1]),
        'B': Vertex(['A'], [1]),
        'C': Vertex([], [])
    }
    assert dijkstras(weighted_graph, 'A', 'C') == []