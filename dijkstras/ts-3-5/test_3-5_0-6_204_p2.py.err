import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

class TestDijkstras:

    def test_dijkstras_shortest_path(self):
        weighted_graph = WeightedGraph()
        vertex_a = Vertex('A')
        vertex_b = Vertex('B')
        vertex_c = Vertex('C')
        vertex_d = Vertex('D')

        vertex_a.add_adjacent(vertex_b, 1)
        vertex_a.add_adjacent(vertex_c, 4)
        vertex_b.add_adjacent(vertex_c, 2)
        vertex_b.add_adjacent(vertex_d, 5)
        vertex_c.add_adjacent(vertex_d, 1)

        weighted_graph.add_vertex(vertex_a)
        weighted_graph.add_vertex(vertex_b)
        weighted_graph.add_vertex(vertex_c)
        weighted_graph.add_vertex(vertex_d)

        assert dijkstras(weighted_graph, 'A', 'D') == ['A', 'C', 'D']

    def test_dijkstras_no_path(self):
        weighted_graph = WeightedGraph()
        vertex_a = Vertex('A')
        vertex_b = Vertex('B')
        vertex_c = Vertex('C')

        vertex_a.add_adjacent(vertex_b, 2)
        vertex_b.add_adjacent(vertex_c, 3)

        weighted_graph.add_vertex(vertex_a)
        weighted_graph.add_vertex(vertex_b)
        weighted_graph.add_vertex(vertex_c)

        assert dijkstras(weighted_graph, 'A', 'C') == []

    def test_dijkstras_same_source_and_destination(self):
        weighted_graph = WeightedGraph()
        vertex_a = Vertex('A')
        vertex_b = Vertex('B')
        vertex_c = Vertex('C')

        vertex_a.add_adjacent(vertex_b, 2)
        vertex_b.add_adjacent(vertex_c, 3)

        weighted_graph.add_vertex(vertex_a)
        weighted_graph.add_vertex(vertex_b)
        weighted_graph.add_vertex(vertex_c)

        assert dijkstras(weighted_graph, 'A', 'A') == ['A']

    def test_dijkstras_negative_weights(self):
        weighted_graph = WeightedGraph()
        vertex_a = Vertex('A')
        vertex_b = Vertex('B')
        vertex_c = Vertex('C')

        vertex_a.add_adjacent(vertex_b, -2)
        vertex_b.add_adjacent(vertex_c, 3)

        weighted_graph.add_vertex(vertex_a)
        weighted_graph.add_vertex(vertex_b)
        weighted_graph.add_vertex(vertex_c)

        assert dijkstras(weighted_graph, 'A', 'C') == ['A', 'B', 'C']