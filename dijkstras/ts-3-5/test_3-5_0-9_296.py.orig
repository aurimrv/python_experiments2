import pytest
import os
import sys

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

@pytest.fixture
def weighted_graph():
    class Vertex:
        def __init__(self, val):
            self.val = val
            self.adjacent = {}

    class WeightedGraph:
        def __init__(self):
            self.vertices = {}

    graph = WeightedGraph()
    a = Vertex('A')
    a.adjacent['B'] = 4
    a.adjacent['C'] = 2
    b = Vertex('B')
    b.adjacent['C'] = 5
    c = Vertex('C')
    c.adjacent['B'] = 1
    graph.vertices = {'A': a, 'B': b, 'C': c}
    return graph

def test_dijkstras_shortest_path(weighted_graph):
    result = dijkstras(weighted_graph, 'A', 'C')
    assert result == ['A', 'C']

def test_dijkstras_shortest_path_reverse(weighted_graph):
    result = dijkstras(weighted_graph, 'C', 'A')
    assert result == ['C', 'B', 'A']

def test_dijkstras_no_path(weighted_graph):
    result = dijkstras(weighted_graph, 'B', 'A')
    assert result == []

def test_dijkstras_same_source_dest(weighted_graph):
    result = dijkstras(weighted_graph, 'A', 'A')
    assert result == ['A']