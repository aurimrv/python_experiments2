import os
import sys
import pytest

# Add project directory to sys.path for correct imports
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras, WeightedGraph, Vertex

def test_dijkstras_shortest_path():
    graph = WeightedGraph()
    v1 = Vertex('A')
    v2 = Vertex('B')
    v3 = Vertex('C')
    v4 = Vertex('D')
    v1.add_edge(v2, 1)
    v1.add_edge(v3, 3)
    v2.add_edge(v3, 1)
    v2.add_edge(v4, 4)
    v3.add_edge(v4, 1)
    graph.vertices = {'A': v1, 'B': v2, 'C': v3, 'D': v4}

    assert dijkstras(graph, 'A', 'D') == ['A', 'C', 'D']

def test_dijkstras_no_path():
    graph = WeightedGraph()
    v1 = Vertex('A')
    v2 = Vertex('B')
    v3 = Vertex('C')
    v4 = Vertex('D')
    v1.add_edge(v2, 1)
    v3.add_edge(v4, 1)
    graph.vertices = {'A': v1, 'B': v2, 'C': v3, 'D': v4}

    assert dijkstras(graph, 'A', 'D') == []

def test_dijkstras_same_src_dst():
    graph = WeightedGraph()
    v1 = Vertex('A')
    v2 = Vertex('B')
    v3 = Vertex('C')
    v4 = Vertex('D')
    v1.add_edge(v2, 1)
    v1.add_edge(v4, 4)
    v2.add_edge(v3, 1)
    v4.add_edge(v3, 1)
    graph.vertices = {'A': v1, 'B': v2, 'C': v3, 'D': v4}

    assert dijkstras(graph, 'A', 'A') == ['A']

def test_dijkstras_invalid_src():
    graph = WeightedGraph()
    v1 = Vertex('A')
    v2 = Vertex('B')
    v3 = Vertex('C')
    v1.add_edge(v2, 1)
    v1.add_edge(v3, 3)
    v2.add_edge(v3, 1)
    graph.vertices = {'A': v1, 'B': v2, 'C': v3}

    with pytest.raises(KeyError):
        dijkstras(graph, 'Z', 'C')