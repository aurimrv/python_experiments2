import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

class TestDijkstras:

    def test_dijkstras_basic_case(self):
        weighted_graph = WeightedGraph()
        weighted_graph.add_vertex('A')
        weighted_graph.add_vertex('B')
        weighted_graph.add_vertex('C')
        weighted_graph.add_vertex('D')
        weighted_graph.add_edge('A', 'B', 1)
        weighted_graph.add_edge('B', 'C', 2)
        weighted_graph.add_edge('C', 'D', 3)
        assert dijkstras(weighted_graph, 'A', 'D') == ['A', 'B', 'C', 'D']

    def test_dijkstras_same_source_and_destination(self):
        weighted_graph = WeightedGraph()
        weighted_graph.add_vertex('X')
        assert dijkstras(weighted_graph, 'X', 'X') == ['X']

    def test_dijkstras_unreachable_destination(self):
        weighted_graph = WeightedGraph()
        weighted_graph.add_vertex('M')
        weighted_graph.add_vertex('N')
        weighted_graph.add_vertex('O')
        weighted_graph.add_edge('M', 'N', 2)
        weighted_graph.add_edge('N', 'O', 3)
        assert dijkstras(weighted_graph, 'M', 'O') == []

    def test_dijkstras_negative_weights(self):
        weighted_graph = WeightedGraph()
        weighted_graph.add_vertex('P')
        weighted_graph.add_vertex('Q')
        weighted_graph.add_vertex('R')
        weighted_graph.add_edge('P', 'Q', -1)
        weighted_graph.add_edge('Q', 'R', -2)
        assert dijkstras(weighted_graph, 'P', 'R') == ['P', 'Q', 'R']

    def test_dijkstras_empty_graph(self):
        weighted_graph = WeightedGraph()
        assert dijkstras(weighted_graph, 'A', 'Z') == []

    def test_dijkstras_large_graph(self):
        weighted_graph = WeightedGraph()
        for char in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':
            weighted_graph.add_vertex(char)
        for i in range(25):
            weighted_graph.add_edge(chr(65+i), chr(65+i+1), 1)
        assert dijkstras(weighted_graph, 'A', 'Z') == list('ABCDEFGHIJKLMNOPQRSTUVWXYZ')