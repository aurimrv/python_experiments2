import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

class MockVertex:
    def __init__(self, name):
        self.name = name
        self.adjacent = {}

def test_dijkstras():
    vertex_a = MockVertex("A")
    vertex_b = MockVertex("B")
    vertex_c = MockVertex("C")
    
    vertex_a.adjacent = {vertex_b: 1, vertex_c: 2}
    vertex_b.adjacent = {vertex_a: 1, vertex_c: 3}
    vertex_c.adjacent = {vertex_a: 2, vertex_b: 3}
    
    weighted_graph = {"A": vertex_a, "B": vertex_b, "C": vertex_c}
    
    path = dijkstras(weighted_graph, "A", "C")
    assert path == ["A", "C"]
    
def test_dijkstras_multiple_paths():
    vertex_a = MockVertex("A")
    vertex_b = MockVertex("B")
    vertex_c = MockVertex("C")
    vertex_d = MockVertex("D")
    
    vertex_a.adjacent = {vertex_b: 1, vertex_c: 2}
    vertex_b.adjacent = {vertex_a: 1, vertex_c: 3, vertex_d: 2}
    vertex_c.adjacent = {vertex_a: 2, vertex_b: 3, vertex_d: 1}
    vertex_d.adjacent = {vertex_b: 2, vertex_c: 1}
    
    weighted_graph = {"A": vertex_a, "B": vertex_b, "C": vertex_c, "D": vertex_d}
    
    path = dijkstras(weighted_graph, "A", "D")
    assert path == ["A", "B", "D"]

def test_dijkstras_no_path():
    vertex_a = MockVertex("A")
    vertex_b = MockVertex("B")
    vertex_c = MockVertex("C")
    
    vertex_a.adjacent = {vertex_b: 1, vertex_c: 2}
    vertex_b.adjacent = {vertex_a: 1, vertex_c: 3}
    vertex_c.adjacent = {vertex_a: 2, vertex_b: 3}
    
    weighted_graph = {"A": vertex_a, "B": vertex_b, "C": vertex_c}
    
    path = dijkstras(weighted_graph, "A", "D")
    assert path == [] 