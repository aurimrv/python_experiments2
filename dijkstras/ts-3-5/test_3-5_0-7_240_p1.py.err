import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

class TestDijkstras:
    
    def test_dijkstras_shortest_path(self):
        weighted_graph = {
            'A': {'B': 1, 'C': 4},
            'B': {'A': 1, 'C': 2, 'D': 5},
            'C': {'A': 4, 'B': 2, 'D': 1},
            'D': {'B': 5, 'C': 1}
        }
        src = 'A'
        dst = 'D'
        assert dijkstras(weighted_graph, src, dst) == ['A', 'B', 'C', 'D']
        
    def test_dijkstras_no_path(self):
        weighted_graph = {
            'A': {'B': 1},
            'B': {'A': 1},
            'C': {}
        }
        src = 'A'
        dst = 'C'
        assert dijkstras(weighted_graph, src, dst) == []
        
    def test_dijkstras_same_source_dest(self):
        weighted_graph = {
            'A': {'B': 1, 'C': 4},
            'B': {'A': 1, 'C': 2, 'D': 5},
            'C': {'A': 4, 'B': 2, 'D': 1},
            'D': {'B': 5, 'C': 1}
        }
        src = 'B'
        dst = 'B'
        assert dijkstras(weighted_graph, src, dst) == ['B']
        
    def test_dijkstras_large_graph(self):
        weighted_graph = {
            'A': {'B': 1, 'C': 4},
            'B': {'A': 1, 'C': 2, 'D': 5, 'E': 2},
            'C': {'A': 4, 'B': 2, 'D': 1, 'E': 3},
            'D': {'B': 5, 'C': 1, 'E': 7},
            'E': {'B': 2, 'C': 3, 'D': 7}
        }
        src = 'A'
        dst = 'E'
        assert dijkstras(weighted_graph, src, dst) == ['A', 'B', 'E']